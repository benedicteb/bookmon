name: Release

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  FORMULA_PATH: Formula/bookmon.rb

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run tests
        run: cargo test

  build:
    name: Build
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: bookmon-linux
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: bookmon-windows.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: bookmon-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: bookmon-macos-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: target/${{ matrix.target }}/release/bookmon${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    outputs:
      semver: ${{ steps.gitversion.outputs.semVer }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: main

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: '6.0.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.1
        with:
          overrideConfig: |
            mode=ContinuousDeployment

      - name: Generate release notes
        id: release_notes
        run: |
          echo "## Changes in v${{ steps.gitversion.outputs.semVer }}" > release_notes.md
          echo "" >> release_notes.md
          echo "### Commits" >> release_notes.md
          git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"* %s (%h)" >> release_notes.md

      - name: Update Cargo.toml version
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ steps.gitversion.outputs.semVer }}\"/" Cargo.toml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Cargo.toml
          git commit -m "chore: bump version to ${{ steps.gitversion.outputs.semVer }}"
          git push

      - name: Create tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ steps.gitversion.outputs.semVer }}" -m "Release v${{ steps.gitversion.outputs.semVer }}"
          git push origin "v${{ steps.gitversion.outputs.semVer }}"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: bookmon-*

      - name: Create archives
        run: |
          cd artifacts
          for dir in bookmon-*; do
            if [ -d "$dir" ]; then
              tar -czf "${dir}.tar.gz" "$dir"
            fi
          done
          cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            artifacts/bookmon-linux.tar.gz
            artifacts/bookmon-windows.exe.tar.gz
            artifacts/bookmon-macos-x86_64.tar.gz
            artifacts/bookmon-macos-arm64.tar.gz
          body_path: release_notes.md
          tag_name: v${{ steps.gitversion.outputs.semVer }}
          fail_on_unmatched_files: true
          name: Release v${{ steps.gitversion.outputs.semVer }}
          draft: false
          prerelease: false

  update-homebrew:
    name: Update Homebrew Formula
    needs: release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download release tarball
        run: |
          curl -L -o bookmon.tar.gz "https://github.com/benedicteb/bookmon/archive/refs/tags/v${{ needs.release.outputs.semver }}.tar.gz"

      - name: Calculate SHA256 hash
        id: hash
        run: |
          SHA256=$(shasum -a 256 bookmon.tar.gz | cut -d' ' -f1)
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT

      - name: Update formula version and hash
        run: |
          sed -r -i 's|url "https://github.com/benedicteb/bookmon/archive/refs/tags/v.*?.tar.gz"|url "https://github.com/benedicteb/bookmon/archive/refs/tags/v${{ needs.release.outputs.semver }}.tar.gz"|' ${{ env.FORMULA_PATH }}
          sed -r -i 's|sha256 ".*"|sha256 "${{ steps.hash.outputs.sha256 }}"|' ${{ env.FORMULA_PATH }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ${{ env.FORMULA_PATH }}
          git commit -m "chore: update formula version to v${{ needs.release.outputs.semver }} and add SHA256 hash"
          git pull --rebase
          git push
